{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["ReactFC","fcRoot","FusionCharts","FusionMaps","World","USA","California","NewHampshire","FusionTheme","chartConfigs","type","width","height","dataFormat","dataSource","chartStateMapConfigs","App","className","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9cdbe2f8.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// Including the react-fusioncharts component\nimport ReactFC from 'react-fusioncharts';\n\n// Including the fusioncharts library\nimport FusionCharts from 'fusioncharts';\n\n// Including the map renderer\nimport FusionMaps from 'fusioncharts/fusioncharts.maps';\n\n// Including the map definition file\nimport World from 'fusioncharts/maps/fusioncharts.world';\n\nimport USA from 'fusioncharts/maps/fusioncharts.usa';\n\nimport California from 'fusionmaps/maps/fusioncharts.california';\n\nimport NewHampshire from 'fusionmaps/maps/fusioncharts.newhampshire';\n\n// Including the theme as fusion\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Adding the map as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, FusionMaps, World, USA, California, NewHampshire, FusionTheme);\n\n// Creating the JSON object to store the map configurations\nconst chartConfigs = {\n    type: 'world',\n    width: '800',\n    height: '550',\n    dataFormat: 'json',\n    dataSource: {\n    // Map Configuration\n        \"chart\": {\n                \"caption\": \"Average Annual Population Growth\",\n                \"subcaption\": \" 1955-2015\",\n                \"numbersuffix\": \"%\",\n                \"includevalueinlabels\": \"1\",\n                \"labelsepchar\": \": \",\n                \"entityFillHoverColor\": \"#FFF9C4\",\n                \"theme\": \"fusion\"\n        },\n        // Aesthetics; ranges synced with the slider\n        \"colorrange\": {\n            \"minvalue\": \"0\",\n            \"code\": \"#FFE0B2\",\n            \"gradient\": \"1\",\n            \"color\": [{\n                \"minvalue\": \"0.5\",\n                \"maxvalue\": \"1.0\",\n                \"color\": \"#FFD74D\"\n            }, {\n                \"minvalue\": \"1.0\",\n                \"maxvalue\": \"2.0\",\n                \"color\": \"#FB8C00\"\n            }, {\n                \"minvalue\": \"2.0\",\n                \"maxvalue\": \"3.0\",\n                \"color\": \"#E65100\"\n            }]\n        },\n        // Source data as JSON --> id represents countries of world.\n        \"data\": [{\n            \"id\": \"NA\",\n            \"value\": \".82\",\n            \"showLabel\": \"1\"\n        }, {\n            \"id\": \"SA\",\n            \"value\": \"2.04\",\n            \"showLabel\": \"1\"\n        }, {\n            \"id\": \"AS\",\n            \"value\": \"1.78\",\n            \"showLabel\": \"1\"\n        }, {\n            \"id\": \"EU\",\n            \"value\": \".40\",\n            \"showLabel\": \"1\"\n        }, {\n            \"id\": \"AF\",\n            \"value\": \"2.58\",\n            \"showLabel\": \"1\"\n        }, {\n            \"id\": \"AU\",\n            \"value\": \"1.30\",\n            \"showLabel\": \"1\"\n        }]\n    }\n}\n\nconst chartStateMapConfigs = {\n  type: 'maps/california',\n  width: '800',\n  height: '550',\n  dataFormat: 'json',\n  dataSource: {\n      \"chart\": {\n          \"animation\": \"0\",\n          \"showbevel\": \"0\",\n          \"usehovercolor\": \"1\",\n          \"showlegend\": \"1\",\n          \"legendposition\": \"BOTTOM\",\n          \"legendborderalpha\": \"0\",\n          \"legendbordercolor\": \"ffffff\",\n          \"legendallowdrag\": \"0\",\n          \"legendshadow\": \"0\",\n          \"caption\": \"Website Visits for the month of March 2018\",\n          \"connectorcolor\": \"000000\",\n          \"fillalpha\": \"80\",\n          \"hovercolor\": \"CCCCCC\",\n          \"theme\": \"fusion\"\n      },\n      \"colorrange\": {\n          \"minvalue\": \"0\",\n          \"startlabel\": \"Low\",\n          \"endlabel\": \"High\",\n          \"code\": \"e44a00\",\n          \"gradient\": \"1\",\n          \"color\": [{\"maxvalue\": \"2500\", \"code\": \"f8bd19\"}, {\"maxvalue\": \"5000\", \"code\": \"6baa01\"}]\n      },\n      \"data\": [{\"id\":\"001\",\"value\":2834},{\"id\":\"003\",\"value\":3182},{\"id\":\"005\",\"value\":3280},{\"id\":\"007\",\"value\":911},{\"id\":\"009\",\"value\":292},{\"id\":\"011\",\"value\":530},{\"id\":\"013\",\"value\":2515},{\"id\":\"015\",\"value\":728},{\"id\":\"017\",\"value\":1974},{\"id\":\"019\",\"value\":848},{\"id\":\"021\",\"value\":3278},{\"id\":\"023\",\"value\":4463},{\"id\":\"025\",\"value\":1198},{\"id\":\"027\",\"value\":378},{\"id\":\"029\",\"value\":2610},{\"id\":\"031\",\"value\":1200},{\"id\":\"033\",\"value\":3820},{\"id\":\"035\",\"value\":940},{\"id\":\"037\",\"value\":3416},{\"id\":\"039\",\"value\":4004},{\"id\":\"041\",\"value\":1604},{\"id\":\"043\",\"value\":4011},{\"id\":\"045\",\"value\":3203},{\"id\":\"047\",\"value\":3775},{\"id\":\"049\",\"value\":2721},{\"id\":\"051\",\"value\":3417},{\"id\":\"053\",\"value\":1530},{\"id\":\"055\",\"value\":412},{\"id\":\"057\",\"value\":3434},{\"id\":\"059\",\"value\":1670},{\"id\":\"061\",\"value\":1274},{\"id\":\"063\",\"value\":4339},{\"id\":\"065\",\"value\":2073},{\"id\":\"067\",\"value\":1018},{\"id\":\"069\",\"value\":3967},{\"id\":\"071\",\"value\":3401},{\"id\":\"073\",\"value\":3307},{\"id\":\"075\",\"value\":1938},{\"id\":\"077\",\"value\":489},{\"id\":\"079\",\"value\":3207},{\"id\":\"081\",\"value\":2295},{\"id\":\"083\",\"value\":2747},{\"id\":\"085\",\"value\":1114},{\"id\":\"087\",\"value\":3400},{\"id\":\"089\",\"value\":784},{\"id\":\"091\",\"value\":1673},{\"id\":\"093\",\"value\":4274},{\"id\":\"095\",\"value\":4509},{\"id\":\"097\",\"value\":3862},{\"id\":\"099\",\"value\":1356},{\"id\":\"101\",\"value\":4126},{\"id\":\"103\",\"value\":1314},{\"id\":\"105\",\"value\":1807},{\"id\":\"107\",\"value\":4026},{\"id\":\"109\",\"value\":3456},{\"id\":\"111\",\"value\":1393},{\"id\":\"113\",\"value\":1500},{\"id\":\"115\",\"value\":2218}]\n  }\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Sample Fusion Charts Maps React App</h1>\n      </header>\n      <div className=\"chart-wrapper\">\n      <ReactFC {...chartConfigs}/>\n      </div>\n      <div className=\"chart-wrapper\">\n      <ReactFC {...chartStateMapConfigs}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}